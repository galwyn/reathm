// Mocks generated by Mockito 5.4.6 from annotations
// in reathm/test/home_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:flutter_local_notifications/flutter_local_notifications.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:reathm/cloud_function_service.dart' as _i8;
import 'package:reathm/firestore_service.dart' as _i4;
import 'package:reathm/models/activity.dart' as _i6;
import 'package:reathm/notification_service.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeUserMetadata_0 extends _i1.SmartFake implements _i2.UserMetadata {
  _FakeUserMetadata_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMultiFactor_1 extends _i1.SmartFake implements _i2.MultiFactor {
  _FakeMultiFactor_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdTokenResult_2 extends _i1.SmartFake implements _i2.IdTokenResult {
  _FakeIdTokenResult_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserCredential_3 extends _i1.SmartFake
    implements _i2.UserCredential {
  _FakeUserCredential_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConfirmationResult_4 extends _i1.SmartFake
    implements _i2.ConfirmationResult {
  _FakeConfirmationResult_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_5 extends _i1.SmartFake implements _i2.User {
  _FakeUser_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFlutterLocalNotificationsPlugin_6 extends _i1.SmartFake
    implements _i3.FlutterLocalNotificationsPlugin {
  _FakeFlutterLocalNotificationsPlugin_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

/// A class which mocks [FirestoreService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreService extends _i1.Mock implements _i4.FirestoreService {
  MockFirestoreService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i6.Activity>> getActiveActivities(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getActiveActivities, [userId]),
            returnValue: _i5.Future<List<_i6.Activity>>.value(<_i6.Activity>[]),
          )
          as _i5.Future<List<_i6.Activity>>);

  @override
  _i5.Future<void> saveDailyActivities(
    String? userId,
    List<_i6.Activity>? activities,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveDailyActivities, [userId, activities]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> addDailyActivity(String? userId, _i6.Activity? activity) =>
      (super.noSuchMethod(
            Invocation.method(#addDailyActivity, [userId, activity]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateDailyActivity(
    String? userId,
    _i6.Activity? activity,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateDailyActivity, [userId, activity]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteDailyActivity(String? userId, String? activityId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteDailyActivity, [userId, activityId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setActivityCompletedStatus(
    String? userId,
    String? activityName,
    bool? isCompleted,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#setActivityCompletedStatus, [
              userId,
              activityName,
              isCompleted,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<String>> getAccomplishedActivities(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getAccomplishedActivities, [userId]),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<List<DateTime>> getActivityHistory(
    String? userId,
    String? activityName,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getActivityHistory, [userId, activityName]),
            returnValue: _i5.Future<List<DateTime>>.value(<DateTime>[]),
          )
          as _i5.Future<List<DateTime>>);

  @override
  _i5.Future<void> addAffirmationFeedback(
    String? userId,
    String? affirmation,
    bool? liked,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addAffirmationFeedback, [
              userId,
              affirmation,
              liked,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<String?> getRandomSeededAffirmation() =>
      (super.noSuchMethod(
            Invocation.method(#getRandomSeededAffirmation, []),
            returnValue: _i5.Future<String?>.value(),
          )
          as _i5.Future<String?>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getAllAccomplishments(
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAllAccomplishments, [userId]),
            returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<List<String>> getAccomplishmentsForDay(
    String? userId,
    DateTime? day,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAccomplishmentsForDay, [userId, day]),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<void> saveUser(_i2.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#saveUser, [user]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i2.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified =>
      (super.noSuchMethod(Invocation.getter(#emailVerified), returnValue: false)
          as bool);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);

  @override
  _i2.UserMetadata get metadata =>
      (super.noSuchMethod(
            Invocation.getter(#metadata),
            returnValue: _FakeUserMetadata_0(
              this,
              Invocation.getter(#metadata),
            ),
          )
          as _i2.UserMetadata);

  @override
  List<_i2.UserInfo> get providerData =>
      (super.noSuchMethod(
            Invocation.getter(#providerData),
            returnValue: <_i2.UserInfo>[],
          )
          as List<_i2.UserInfo>);

  @override
  String get uid =>
      (super.noSuchMethod(
            Invocation.getter(#uid),
            returnValue: _i7.dummyValue<String>(this, Invocation.getter(#uid)),
          )
          as String);

  @override
  _i2.MultiFactor get multiFactor =>
      (super.noSuchMethod(
            Invocation.getter(#multiFactor),
            returnValue: _FakeMultiFactor_1(
              this,
              Invocation.getter(#multiFactor),
            ),
          )
          as _i2.MultiFactor);

  @override
  _i5.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdToken, [forceRefresh]),
            returnValue: _i5.Future<String?>.value(),
          )
          as _i5.Future<String?>);

  @override
  _i5.Future<_i2.IdTokenResult> getIdTokenResult([
    bool? forceRefresh = false,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdTokenResult, [forceRefresh]),
            returnValue: _i5.Future<_i2.IdTokenResult>.value(
              _FakeIdTokenResult_2(
                this,
                Invocation.method(#getIdTokenResult, [forceRefresh]),
              ),
            ),
          )
          as _i5.Future<_i2.IdTokenResult>);

  @override
  _i5.Future<_i2.UserCredential> linkWithCredential(
    _i2.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithCredential, [credential]),
            returnValue: _i5.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#linkWithCredential, [credential]),
              ),
            ),
          )
          as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<_i2.UserCredential> linkWithProvider(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithProvider, [provider]),
            returnValue: _i5.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#linkWithProvider, [provider]),
              ),
            ),
          )
          as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<_i2.UserCredential> reauthenticateWithProvider(
    _i2.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithProvider, [provider]),
            returnValue: _i5.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#reauthenticateWithProvider, [provider]),
              ),
            ),
          )
          as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<_i2.UserCredential> reauthenticateWithPopup(
    _i2.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithPopup, [provider]),
            returnValue: _i5.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#reauthenticateWithPopup, [provider]),
              ),
            ),
          )
          as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<void> reauthenticateWithRedirect(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithRedirect, [provider]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.UserCredential> linkWithPopup(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPopup, [provider]),
            returnValue: _i5.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#linkWithPopup, [provider]),
              ),
            ),
          )
          as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<void> linkWithRedirect(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithRedirect, [provider]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i2.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i5.Future<_i2.ConfirmationResult>.value(
              _FakeConfirmationResult_4(
                this,
                Invocation.method(#linkWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i5.Future<_i2.ConfirmationResult>);

  @override
  _i5.Future<_i2.UserCredential> reauthenticateWithCredential(
    _i2.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithCredential, [credential]),
            returnValue: _i5.Future<_i2.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#reauthenticateWithCredential, [credential]),
              ),
            ),
          )
          as _i5.Future<_i2.UserCredential>);

  @override
  _i5.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> sendEmailVerification([
    _i2.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, [actionCodeSettings]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.User> unlink(String? providerId) =>
      (super.noSuchMethod(
            Invocation.method(#unlink, [providerId]),
            returnValue: _i5.Future<_i2.User>.value(
              _FakeUser_5(this, Invocation.method(#unlink, [providerId])),
            ),
          )
          as _i5.Future<_i2.User>);

  @override
  _i5.Future<void> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updatePhoneNumber(
    _i2.PhoneAuthCredential? phoneCredential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneNumber, [phoneCredential]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#updateDisplayName, [displayName]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updatePhotoURL(String? photoURL) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhotoURL, [photoURL]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateProfile({String? displayName, String? photoURL}) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #displayName: displayName,
              #photoURL: photoURL,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i2.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#verifyBeforeUpdateEmail, [
              newEmail,
              actionCodeSettings,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [CloudFunctionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudFunctionService extends _i1.Mock
    implements _i8.CloudFunctionService {
  MockCloudFunctionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<String> generateAffirmation(String? prompt) =>
      (super.noSuchMethod(
            Invocation.method(#generateAffirmation, [prompt]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#generateAffirmation, [prompt]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<String> generateEncouragement(String? completedActivity) =>
      (super.noSuchMethod(
            Invocation.method(#generateEncouragement, [completedActivity]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#generateEncouragement, [completedActivity]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<String> generateNewAffirmation(String? dislikedAffirmation) =>
      (super.noSuchMethod(
            Invocation.method(#generateNewAffirmation, [dislikedAffirmation]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#generateNewAffirmation, [
                  dislikedAffirmation,
                ]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<void> deleteUserAccount() =>
      (super.noSuchMethod(
            Invocation.method(#deleteUserAccount, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [NotificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationService extends _i1.Mock
    implements _i9.NotificationService {
  MockNotificationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.FlutterLocalNotificationsPlugin get flutterLocalNotificationsPlugin =>
      (super.noSuchMethod(
            Invocation.getter(#flutterLocalNotificationsPlugin),
            returnValue: _FakeFlutterLocalNotificationsPlugin_6(
              this,
              Invocation.getter(#flutterLocalNotificationsPlugin),
            ),
          )
          as _i3.FlutterLocalNotificationsPlugin);

  @override
  _i5.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> showNotification(int? id, String? title, String? body) =>
      (super.noSuchMethod(
            Invocation.method(#showNotification, [id, title, body]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
